version: "3"

services:
  redis-server:
    image: bitnami/redis:latest
    container_name: redis
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - "6379:6379"

  renders-database:
    image: mysql:8.0.30
    cap_add:
      - SYS_NICE
    container_name: renders-database
    ports:
      - "3306:3306"
    environment:
      - MYSQL_DATABASE=Renders
    env_file:
      - .env
    volumes:
      - my-db:/mnt/c/Users/Marko/Desktop/Assignment-2/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "-uroot", "-ptest", "ping"]
      timeout: 1s
      retries: 2

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    restart: always
    ports:
      - 8090:80
    environment:
      - PMA_HOST=renders-database
    depends_on:
      renders-database:
        condition: service_healthy

  frontend:
    depends_on:
      - backend
    build:
      context: ./application
      dockerfile: application/Dockerfile_frontend
    container_name: frontend
    volumes:
      - ./application:/app
    ports:
      - "8000:8000"
    command: "npm run dev"
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_SESSION_TOKEN=${AWS_SESSION_TOKEN}
    env_file:
      - .env

  backend:
    depends_on:
      renders-database:
        condition: service_healthy
    build:
      context: ./application
      dockerfile:  application/Dockerfile_backend
    container_name: backend
    volumes:
      - ./application:/app
    ports:
      - "7999:8000"
    command: "npm run dev"
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_SESSION_TOKEN=${AWS_SESSION_TOKEN}
    env_file:
      - .env

volumes:
  my-db:
    driver: local